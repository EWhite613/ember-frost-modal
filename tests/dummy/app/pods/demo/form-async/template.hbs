{{!-- BEGIN-SNIPPET form-api-async }}
  {{frost-modal-outlet}}

  {{frost-modal-form
    confirm=(object
      disabledText= // ('Confirm')
    )
    form=(component 'frost-bunsen-form'
      bar= // e.g. props for 'foo'
    )
    onClose= // Required binding
    onConfirm= // A function that returns a promise
  }}
{{ END-SNIPPET --}}

{{! BEGIN-SNIPPET form-async }}
{{frost-modal-form
  closeOnConfirm=true
  confirm=(hash
    disabled=(not isFormValid)
    disabledText='Waiting...'
  )
  form=(component 'frost-bunsen-form'
    bunsenModel=bunsenModel
    hook='bunsen-form'
    onChange=(action 'updateFormValue')
    onValidation=(action 'updateValidity')
    value=bunsenValue
  )
  hook='form-dialog'
  isVisible=isFormVisible
  subtitle='Confirm can optionally wait until onConfirm resolves'
  title='Delaying closure until a promise resolves'
  onClose=(action 'closeForm')
  onConfirm=(action 'doSomethingAsync')
}}
{{! END-SNIPPET }}

<div class='frost-modal-demo-api'>
  <div class='frost-modal-demo-title'>
    Promise-aware behavior when <code>onConfirm</code> returns a promise
  </div>
  <div class='frost-modal-demo-notes'>
    <p>
      When <code>onConfirm</code> returns a promise, the modal will stay open until the promise resolves.
      It can optionally be configured to disable the Confirm button until the promise resolves.
    </p>
    <p>
      To take advantage of this feature, <code>closeOnConfirm</code> must be true
      and your <code>onConfirm</code> action needs to return a promise.
    </p>
    <ul>
      <li><b><code>onConfirm</code></b> is a function that returns a promise</li>
      <li><b><code>closeOnConfirm=true</code></b> (default true) to enable automatic handling</li>
      <li>
        <b><code>disableConfirmUntilOnConfirmResolves=true</code></b> (default true)
        will disable the confirm button until <code>onConfirm</code>'s return value resolves
      </li>
      <li>
        <b><code>confirm.disabledText='some string'</code></b>
        lets you override the text to use (instead of "Confirm") when the Confirm button is disabled.
        Default behavior is to use the <code>confirm.text</code> property.
      </li>
    </ul>
  </div>
  <div class='frost-modal-demo-title'>
    API
  </div>
  <div class='frost-modal-demo-snippet'>
    {{code-snippet name='form-api-async.hbs'}}
  </div>
</div>
<div class='frost-modal-demo-live'>
  <div class='frost-modal-demo-title'>
    Live demo
  </div>
  <div class='frost-modal-demo-snippet'>
    {{code-snippet name='form-async.hbs'}}
  </div>
  <div class='frost-modal-demo-launch'>
    {{frost-button
      hook='launchButton'
      priority='primary'
      size='medium'
      text='Launch the modal'
      onClick=(action 'openForm')
    }}
  </div>
</div>
