{{!-- BEGIN-SNIPPET warn-api }}
  {{frost-modal-outlet}}

  {{! use `object` instead of `hash` to resolve issue
      https://github.com/emberjs/ember.js/issues/14738
      as `hash` does not have a `toString` method }}
  {{frost-modal-warn-message
    buttons=(array
      (object
        disabled= // true
        icon= // e.g. 'info'
        onClick= // e.g. (action 'info')
        pack= // e.g. 'frost'
        priority= // ['primary', etc.]
        text= // e.g. 'Foo'
      )
    )
    cancel=(hash
      isVisible= // (true)
      text= // ('Cancel')
    )
    confirm=(hash
      isVisible=  // (true)
      text= // ('Confirm')
    )
    details=(component 'foo'
      bar= // e.g. props for 'foo'
    )
    footer= // e.g. 'Foo bar' or a component
      (component 'frost-loading')
    isVisible= // Required binding
    links=(array
      (object
        priority= // ['primary', etc.]
        route= // e.g. 'foo.bar'
        text= // e.g. 'Foo'
      )
    )
    subtitle= // e.g. 'Foo bar'
    summary= // [main message]
    targetOutlet= // ('modal')
    title= // Required
    onCancel= // e.g. (action 'foo')
    onClose= // Required binding
    onConfirm= // e.g. (action 'foo')
  }}
{{ END-SNIPPET --}}

{{! BEGIN-SNIPPET warn }}
{{frost-modal-warn-message
  cancel=(hash
    text='Nope'
  )
  hook='warning-dialog'
  isVisible=isWarnVisible
  summary='Take this'
  title="It's dangerous to go alone!"
  onCancel=(action 'escape')
  onClose=(action (mut isWarnVisible) false)
}}
{{! END-SNIPPET }}

<div class='frost-modal-demo-api'>
  <div class='frost-modal-demo-title'>
    API
  </div>
  <div class='frost-modal-demo-snippet'>
    {{code-snippet name='warn-api.hbs'}}
  </div>
</div>
<div class='frost-modal-demo-live'>
  <div class='frost-modal-demo-title'>
    Live demo
  </div>
  <div class='frost-modal-demo-snippet'>
    {{code-snippet name='warn.hbs'}}
  </div>
  <div class='frost-modal-demo-launch'>
    {{frost-button
      hook='launchButton'
      priority='primary'
      size='medium'
      text='Launch the modal'
      onClick=(action (mut isWarnVisible) true)
    }}
  </div>
</div>
